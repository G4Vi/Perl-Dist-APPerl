#!/usr/bin/perl
use strict; use warnings;
use JSON::PP qw(decode_json);
use Cwd qw(cwd);
use v5.10;
no if $] >= 5.018, warnings =>  "experimental::smartmatch";

scalar(@ARGV) <= 1 or die('too many args');
my $opt = 'both';
if(scalar(@ARGV)) {
    ($ARGV[0] ~~ ['perl', 'cosmo', 'both']) or die("unknown arg ".$ARGV[0]);
    $opt = $ARGV[0];
}
my @toupdate;
if($opt ne 'both') {
    push @toupdate, $opt;
}
else {
    push @toupdate, ('perl', 'cosmo');
}

my $configdir = $ENV{XDG_CONFIG_HOME} // ($ENV{HOME}.'/.config');
$configdir .= '/apperl';
my $configpath = "$configdir/apperl.json";
open(my $fh, '<', $configpath) or die "Failed to open config file, did you run apperl-init ?";
my $file_content = do { local $/; <$fh> };
close($fh);
my $config = decode_json($file_content);
my $startpath = cwd;
foreach my $updatetarget (@toupdate) {
    update_repo($config->{$updatetarget.'_repo'});
}

sub command_or_die {
    print join(' ', @_), "\n";
    system(@_) == 0 or die;
}

sub update_repo {
    my ($repopath) = @_;
    print "cd $repopath\n";
    chdir($repopath) or die "Failed to chdir $repopath";
    command_or_die('git', 'pull');
}
