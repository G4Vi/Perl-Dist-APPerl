
# GitHub Actions CI script for Perl-Dist-APPerl
# (C) 2022 Gavin Hayes

name: Build Actually Portable Perl
on:   [ push, pull_request ]

jobs:
  build-linux:
    name:    Build Perl-Dist-APPerl
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repo and submodules
      uses: actions/checkout@v3
      with:
        path: 'Perl-Dist-APPerl'
    - name: Install Perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.36'
    - name: Test in-tree
      run: |
        cd Perl-Dist-APPerl
        prove -lv t
    - name: Build Perl-Dist-APPerl release
      run: |
        cd Perl-Dist-APPerl
        perl Makefile.PL
        make manifest
        make dist
        mv Perl-Dist-APPerl-v*.tar.gz ../
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cpan
        if-no-files-found: error
        path: Perl-Dist-APPerl-v*.tar.gz

  build-apperl:
    name:    Build perl.com
    runs-on: ubuntu-latest
    needs:   build-linux
    strategy:
      matrix:
        config: [full, small, full-vista, small-vista]
    steps:
    - name: Fetch build artifacts
      uses: actions/download-artifact@v3
    - name: prepare for installing module
      run: |
        mv cpan/Perl-Dist-APPerl-v*.tar.gz Perl-Dist-APPerl.tar.gz
    - name: Install Perl
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.36'
        install-modules-with: cpanm
        install-modules: Perl-Dist-APPerl.tar.gz
    - name: Load config
      run: |
          echo "PERL_ID=$(apperlm get-config-key ${{ matrix.config }} perl_id)" >> $GITHUB_ENV
          echo "COSMO_ID=$(apperlm get-config-key ${{ matrix.config }} cosmo_id)" >> $GITHUB_ENV
          echo "DEST_BIN=$(apperlm get-config-key ${{ matrix.config }} dest)" >> $GITHUB_ENV
    - name: Fetch Perl fork
      uses: actions/checkout@v3
      with:
        repository: 'G4Vi/perl5'
        ref: ${{ env.PERL_ID }}
        path: 'perl5'
    - name: Fetch cosmopolitan
      uses: actions/checkout@v3
      with:
        repository: 'jart/cosmopolitan'
        ref: ${{ env.COSMO_ID }}
        path: 'cosmopolitan'
    - name: support ape bins
      run: sudo sh -c "echo ':APE:M::MZqFpD::/bin/sh:' >/proc/sys/fs/binfmt_misc/register"
    - name: Configure and Build perl.com
      env:
        CF_BY: ${{ secrets.CF_BY }}
        CF_EMAIL: ${{ secrets.CF_EMAIL }}
      run: |
        ls -la
        apperlm install-build-deps -p perl5 -c cosmopolitan
        apperlm init --name ${{ matrix.config }}
        apperlm list
        apperlm configure -Dcf_by="$CF_BY" -Dcf_email="$CF_EMAIL"
        apperlm build
        mkdir release
        mv .apperl/o/${{ matrix.config }}/perl.com release/${{ env.DEST_BIN }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config }}
        if-no-files-found: error
        path: release/${{ env.DEST_BIN }}

  create-release:
    name:    Create release
    runs-on: ubuntu-latest
    needs:   [ build-linux, build-apperl ]
    steps:
    - name: Fetch build artifacts
      if:   ${{ github.ref_type == 'tag' }}
      uses: actions/download-artifact@v3
    - name: Make binaries executable
      if:   ${{ github.ref_type == 'tag' }}
      run: |
        chmod +x full/*
        chmod +x small/*
        chmod +x full-vista/*
        chmod +x small-vista/*
    - name: Publish release
      if:   ${{ github.ref_type == 'tag' }}
      uses: softprops/action-gh-release@v1
      with:
        fail_on_unmatched_files: true
        draft: true
        files: |
          cpan/Perl-Dist-APPerl-v*.tar.gz
          full/*
          small/*
          full-vista/*
          small-vista/*
